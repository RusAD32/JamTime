legend =ds_map_create();

legend[? "Pl"] =obj_player;
legend[? "[]"] =obj_dungeon_wall_optimized;
legend[? "Ex"] =obj_dungeon_exit;
legend[? "Re"] =obj_repeat;

legend[? "G1"] =obj_dungeon_cat_monster;
legend[? "G2"] =obj_dungeon_potato_monster;
legend[? "G3"] =obj_office_cat_monster;
legend[? "G4"] =obj_office_potato_monster;
legend[? "Lo"] =obj_lock;
legend[? "Ky"] =obj_key;

legend[? "TT"] = obj_dungeon_altar;
legend[? "\\/"] = obj_dungeon_light;

tile_size =32;
dungeon_width = 6;
dungeon_height = 6;
cell_size =12;



// Cell type X -----------
j =0;

// ---
i =0;
cell_X[j, i++] ="[][][][][][][][][][][][]"
cell_X[j, i++] ="[] . . . . . . . . . .[]"
cell_X[j, i++] ="[] . . . . . . . . . .[]"
cell_X[j, i++] ="[] . . . . . . . . . .[]"
cell_X[j, i++] ="[] . . . . . . . . . .[]"
cell_X[j, i++] ="[] . . . . . . . . . .[]"
cell_X[j, i++] ="[] . . . . . . . . . .[]"
cell_X[j, i++] ="[] . . . . . . . . . .[]"
cell_X[j, i++] ="[] . . . . . . . . . .[]"
cell_X[j, i++] ="[] . . . . . . . . . .[]"
cell_X[j, i++] ="[] . . . . . . . . . .[]"
cell_X[j, i++] ="[][][][][][][][][][][][]"
j++;


// Cell type start -----------
j =0;

// ---
i =0;
cell_start[j, i++] ="[][][][][][][][][][][][]"
cell_start[j, i++] ="[] . . . . . . . . . .[]"
cell_start[j, i++] ="[] . . . . . . . . . .[]"
cell_start[j, i++] ="[] . . . . . . . . . .[]"
cell_start[j, i++] ="[] . . . . . . . . . .[]"
cell_start[j, i++] ="[] . . . . . . . . . .[]"
cell_start[j, i++] ="[] . . . .Pl . . . . .[]"
cell_start[j, i++] ="[] . . . . . . . . . .[]"
cell_start[j, i++] ="[] . . . . . . . . . .[]"
cell_start[j, i++] ="[] . . . . . . . . . .[]"
cell_start[j, i++] ="[] . . . . . . . . . .[]"
cell_start[j, i++] ="[] . . . . . . . . . .[]"
j++;


// Cell type finish -----------
j =0;

// ---
i =0;
cell_finish[j, i++] ="[][][][][][][][][][][][]"
cell_finish[j, i++] ="[][] . .[] . . []. .[][]"
cell_finish[j, i++] ="[] . . . . . . . . . .[]"
cell_finish[j, i++] ="[] . . . . . . . . . .[]"
cell_finish[j, i++] ="[][] . . . . . . . .[][]"
cell_finish[j, i++] ="[] . . . . . . . . . .[]"
cell_finish[j, i++] ="[] . . . .Ex . . . . .[]"
cell_finish[j, i++] ="[][] . . . . . . . .[][]"
cell_finish[j, i++] ="[] . . . . . . . . . .[]"
cell_finish[j, i++] ="[] . . . . . . . . . .[]"
cell_finish[j, i++] ="[][] . . . . . . . .[][]"
cell_finish[j, i++] ="[] . . . . . . . . . .[]"
j++;


// Cell type locked finish -----------
j =0;

// ---
i =0;
cell_locked_finish[j, i++] ="[][][][][][][][][][][][]"
cell_locked_finish[j, i++] ="[][] . .[] . . []. .[][]"
cell_locked_finish[j, i++] ="[] . . . . . . . . . .[]"
cell_locked_finish[j, i++] ="[] . . . . . . . . . .[]"
cell_locked_finish[j, i++] ="[][] . . . . . . . .[][]"
cell_locked_finish[j, i++] ="[] . . . . . . . . . .[]"
cell_locked_finish[j, i++] ="[] . . . .Ex . . . . .[]"
cell_locked_finish[j, i++] ="[][] . . . . . . . .[][]"
cell_locked_finish[j, i++] ="[] . . . . . . . . . .[]"
cell_locked_finish[j, i++] ="[][][][][]LoLo[][][][][]"
cell_locked_finish[j, i++] ="[][] . . . . . . . .[][]"
cell_locked_finish[j, i++] ="[] . . . . . . . . . .[]"
j++;


// Cell type D -----------
j =0;

// ---
i =0;
cell_D[j, i++] ="[][][][][][][][][][][][]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . .[] . . . . . . .[]"
cell_D[j, i++] ="[] . .[] . . . . . . .[]"
cell_D[j, i++] ="[] . .[] . . . . . . .[]"
cell_D[j, i++] ="[] . . . .G1 . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
j++;


// ---
i =0;
cell_D[j, i++] ="[][][][][][][][][][][][]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . .[] . .[] . . . .[]"
cell_D[j, i++] ="[] . .[] . .[] . . . .[]"
cell_D[j, i++] ="[] . .[] . .[] . . . .[]"
cell_D[j, i++] ="[] . . . . . . . G2. .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
j++;


// ---
i =0;
cell_D[j, i++] ="[][][][][][][][][][][][]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . .<> . . . . . .[]"
cell_D[j, i++] ="[] .[] . .[] . .[] . .[]"
cell_D[j, i++] ="[] .[] . .[] . .[] . .[]"
cell_D[j, i++] ="[] .[] . .[] . .[] . .[]"
cell_D[j, i++] ="[] . . . . . .G3 . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
j++;


// ---
i =0;
cell_D[j, i++] ="[][][][][][][][][][][][]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . .<> . . . . .[]"
cell_D[j, i++] ="[] . .[] . .[] .[] . .[]"
cell_D[j, i++] ="[] . .[] . .[] .[] . .[]"
cell_D[j, i++] ="[] . .[] . . .[] . . .[]"
cell_D[j, i++] ="[] . . . . . . . .G4 .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
j++;


// ---
i =0;
cell_D[j, i++] ="[][][][][][][][][][][][]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] .[] .[] . . . . . .[]"
cell_D[j, i++] ="[] .[] .[] . . . . . .[]"
cell_D[j, i++] ="[] . .[] . . . . . . .[]"
cell_D[j, i++] ="[] . . . .<> . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
j++;


// ---
i =0;
cell_D[j, i++] ="[][][][][][][][][][][][]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . .[] .[] . .[] . .[]"
cell_D[j, i++] ="[] . .[] .[] . .[] . .[]"
cell_D[j, i++] ="[] . . .[] . . .[] . .[]"
cell_D[j, i++] ="[] . . . . .<> . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
j++;


// ---
i =0;
cell_D[j, i++] ="[][][][][][][][][][][][]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] .[] .[] .[] .[] . .[]"
cell_D[j, i++] ="[] .[] .[] .[] .[] . .[]"
cell_D[j, i++] ="[] . .[] . .[] .[] . .[]"
cell_D[j, i++] ="[] . .<> . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
j++;

// ---
i =0;
cell_D[j, i++] ="[][][][][][][][][][][][]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] .[] .[] .[] .[] . .[]"
cell_D[j, i++] ="[] .[] .[] . .[] . . .[]"
cell_D[j, i++] ="[] .[] .[] .[] .[] . .[]"
cell_D[j, i++] ="[] . .<> . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
j++;


// ---
i =0;
cell_D[j, i++] ="[][][][][][][][][][][][]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] .[] .[] .[] . . . .[]"
cell_D[j, i++] ="[] .[] . .[] . . . . .[]"
cell_D[j, i++] ="[] .[] .[] .[] . . . .[]"
cell_D[j, i++] ="[] . . . . . . . .<> .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
j++;


// ---
i =0;
cell_D[j, i++] ="[][][][][][][][][][][][]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] .[] .[] . . . . . .[]"
cell_D[j, i++] ="[] . .[] . . . . . . .[]"
cell_D[j, i++] ="[] .[] .[] . . . . . .[]"
cell_D[j, i++] ="[] . . . . . .<> . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
j++;


// ---
i =0;
cell_D[j, i++] ="[][][][][][][][][][][][]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] .[] .[] .[] . . . .[]"
cell_D[j, i++] ="[] . .[] . .[] . . . .[]"
cell_D[j, i++] ="[] .[] .[] .[] . . . .[]"
cell_D[j, i++] ="[] . . . . . . .<> . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
j++;


// ---
i =0;
cell_D[j, i++] ="[][][][][][][][][][][][]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
cell_D[j, i++] ="[] .[] .[] .[] .[] . .[]"
cell_D[j, i++] ="[] . .[] . .[] .[] . .[]"
cell_D[j, i++] ="[] .[] .[] .[] .[] . .[]"
cell_D[j, i++] ="[] . . . . . . .<> . .[]"
cell_D[j, i++] ="[] . . . . . . . . . .[]"
j++;


// Cell type RD -----------
j =0;

// ---
i =0;
cell_RD[j, i++] ="[][][][][][][][][][][][]"
cell_RD[j, i++] ="[] . . . . . . . . . . ."
cell_RD[j, i++] ="[] .\\/ . . . . . . . . ."
cell_RD[j, i++] ="[] . . . . . . . . . . ."
cell_RD[j, i++] ="[] . . . . . . . . . . ."
cell_RD[j, i++] ="[] . . . . . . . . . . ."
cell_RD[j, i++] ="[] . . . . .<> . . . . ."
cell_RD[j, i++] ="[] . . . . . . . . . . ."
cell_RD[j, i++] ="[] . . . . . . . . . . ."
cell_RD[j, i++] ="[] . . . . . . . . . . ."
cell_RD[j, i++] ="[] . . . . . . . . . . ."
cell_RD[j, i++] ="[] . . . . . . . . . .[]"
j++;


// Cell type UD -----------
j =0;

// ---
i =0;
cell_UD[j, i++] ="[] . . . . . . . . . .[]"
cell_UD[j, i++] ="[] . . . . . . . . . .[]"
cell_UD[j, i++] ="[] . . . . . . . . . .[]"
cell_UD[j, i++] ="[] . . . . . . . . . .[]"
cell_UD[j, i++] ="[] . . . . . . . . . .[]"
cell_UD[j, i++] ="[] . . . . . . . . . .[]"
cell_UD[j, i++] ="[] .\\/ . .<><> . . . .[]"
cell_UD[j, i++] ="[] . . . . . . . . . .[]"
cell_UD[j, i++] ="[] . . . . . . . . . .[]"
cell_UD[j, i++] ="[] . . . . . . . . . .[]"
cell_UD[j, i++] ="[] . . . . . . . . . .[]"
cell_UD[j, i++] ="[] . . . . . . . . . .[]"
j++;


// Cell type RDL -----------
j =0;

// ---
i =0;
cell_RDL[j, i++] ="[][][][][][][][][][][][]"
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . .\\/ . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . .<><> . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] ="[] . . . . . . . . . .[]"
j++;

// ---
i =0;
cell_RDL[j, i++] ="[][][][][][][][][][][][]"
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . .\\/ .\\/ . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . .<><> . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] ="[] . . . . . . . . . .[]"
j++;

// ---
i =0;
cell_RDL[j, i++] ="[][][][][][][][][][][][]"
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . .\\/TT . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . .<><> . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] ="[] . . . . . . . . . .[]"
j++;

// ---
i =0;
cell_RDL[j, i++] ="[][][][][][][][][][][][]"
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . .\\/TTTT . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . .<><> . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] =" . . . . . . . . . . . ."
cell_RDL[j, i++] ="[] . . . . . . . . . .[]"
j++;


// Cell type URDL -----------
j =0;

// ---
i =0;
cell_URDL[j, i++] =" . . . . . . . . . . . ."
cell_URDL[j, i++] =" . . . . . . . . . . . ."
cell_URDL[j, i++] =" . . . . . . . . . . . ."
cell_URDL[j, i++] =" . . . . . . . . . . . ."
cell_URDL[j, i++] =" . . . . . . . . . . . ."
cell_URDL[j, i++] =" . . . . . . . . . . . ."
cell_URDL[j, i++] =" . . . . .<><> . . . . ."
cell_URDL[j, i++] =" . . . . . . . . . . . ."
cell_URDL[j, i++] =" . . . . . . . . . . . ."
cell_URDL[j, i++] =" . . . . . . . . . . . ."
cell_URDL[j, i++] =" . . . . . . . . . . . ."
cell_URDL[j, i++] =" . . . . . . . . . . . ."
j++;


// Cell type LOCK -----------
j =0;

i =0;
cell_lock[j, i++] ="[][][][][][][][][][][][]"
cell_lock[j, i++] ="[] . . . . . . . . . .[]"
cell_lock[j, i++] ="[] . . . .<> . . . . .[]"
cell_lock[j, i++] ="[] . .[][][][][][] . .[]"
cell_lock[j, i++] ="[] .[][][][][][][][] .[]"
cell_lock[j, i++] ="[] .[][][] . .[][][] .[]"
cell_lock[j, i++] ="[] .[][][][] .[][][] .[]"
cell_lock[j, i++] ="[] .[][][][][][][][] .[]"
cell_lock[j, i++] ="[] . .Lo . .$1 .[] . .[]"
cell_lock[j, i++] ="[] . .Lo . . . .[] . .[]"
cell_lock[j, i++] ="[] . . .[][][][] . . .[]"
cell_lock[j, i++] ="[] . . . . . . . . . .[]"
j++;


// Cell type KEY -----------
j =0;

// ---
i =0;
cell_key[j, i++] ="[][][][][][][][][][][][]"
cell_key[j, i++] ="[] . . . . . . . . . .[]"
cell_key[j, i++] ="[] .[] . . . . . . . .[]"
cell_key[j, i++] ="[] .[] . . . . . . . .[]"
cell_key[j, i++] ="[] . . . .[][] . . . .[]"
cell_key[j, i++] ="[] . . .[] . .[] . . .[]"
cell_key[j, i++] ="[] . . .[] . .[] . . .[]"
cell_key[j, i++] ="[] . . . .[][] . . . .[]"
cell_key[j, i++] ="[] .<> . .[] . . .Ky .[]"
cell_key[j, i++] ="[] . . . .[] . . . . .[]"
cell_key[j, i++] ="[] . . . .[][] . . . .[]"
cell_key[j, i++] ="[] . . . .[] . . . . .[]"
j++;

